name: test
on:
  push:
    branches: [ main ]
  pull_request:
jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout built branch
      uses: actions/checkout@v3
    - name: Build
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker pull ghcr.io/maison-de-la-simulation/ddc/test_env || true
        docker build \
          --cache-from ghcr.io/maison-de-la-simulation/ddc/test_env \
          -t ghcr.io/maison-de-la-simulation/ddc/test_env \
          -t ghcr.io/maison-de-la-simulation/ddc/test_env:${GITHUB_SHA:0:7} \
          docker/test_env
        docker push ghcr.io/maison-de-la-simulation/ddc/test_env:${GITHUB_SHA:0:7}
    - name: Publish
      if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
      run: |
        docker push ghcr.io/maison-de-la-simulation/ddc/test_env
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: 'include/ddc/ tests/ examples/'
        exclude: ''
        extensions: 'hpp,cpp'
        clangFormatVersion: 12
  test-Debug:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout built branch
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Build
      run: |
        cat<<-EOF > run.sh
          set -xe
          cmake -DCMAKE_CXX_FLAGS="-Wall -fno-omit-frame-pointer -fsanitize=address" -DBUILD_BENCHMARKS=ON -DCMAKE_BUILD_TYPE=Debug /src
          make -j 2 VERBOSE=1
          ctest -j 2 --output-on-failure --timeout 5 --output-junit tests.xml
        EOF
        docker run -v ${PWD}:/src:ro ghcr.io/maison-de-la-simulation/ddc/test_env:${GITHUB_SHA:0:7} bash /src/run.sh
  test-Release:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout built branch
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Build
      run: |
        cat<<-EOF > run.sh
          set -xe
          cmake -DCMAKE_CXX_FLAGS="-Wall" -DBUILD_BENCHMARKS=ON -DCMAKE_BUILD_TYPE=Release /src
          make -j 2 VERBOSE=1
          ctest -j 2 --output-on-failure --timeout 5 --output-junit tests.xml
        EOF
        docker run -v ${PWD}:/src:ro ghcr.io/maison-de-la-simulation/ddc/test_env:${GITHUB_SHA:0:7} bash /src/run.sh
